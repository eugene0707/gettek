swagger: "2.0"
info:
  title: GettEK API
  description: Home assignment for golang from Gett
  version: 1.0.0
  termsOfService: http://gettek.herokuapp.com/
  contact:
    email: eugene0707@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /api/v1
paths:
  /drivers/:
    get:
      tags:
      - drivers
      description: get all drivers
      operationId: DriversController.GetAll
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Driver'
    post:
      tags:
      - drivers
      description: create driver
      operationId: DriversController.Create
      parameters:
      - in: body
        name: body
        description: The driver content
        required: true
        schema:
          $ref: '#/definitions/models.Driver'
      responses:
        "201":
          schema:
            $ref: '#/definitions/models.Driver'
        "403":
          description: body is empty
  /drivers/{id}:
    get:
      tags:
      - drivers
      description: find driver by id
      operationId: DriversController.Get
      parameters:
      - in: path
        name: id
        description: the driver ID you want to get
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Driver'
        "404":
          description: :id not exists
    put:
      tags:
      - drivers
      description: update the driver
      operationId: DriversController.Update
      parameters:
      - in: path
        name: id
        description: The driver ID you want to update
        required: true
        type: string
      - in: body
        name: body
        description: The body
        required: true
        schema:
          $ref: '#/definitions/models.Driver'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Driver'
        "404":
          description: :id not exists
    delete:
      tags:
      - drivers
      description: delete the driver
      operationId: DriversController.Delete
      parameters:
      - in: path
        name: id
        description: The driver ID you want to delete
        required: true
        type: string
      responses:
        "204":
          description: '{string} delete success!'
        "404":
          description: :id not exists
  /metrics/:
    get:
      tags:
      - metrics
      description: get all metrics
      operationId: MetricsController.GetAll
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Metric'
    post:
      tags:
      - metrics
      description: create metric
      operationId: MetricsController.Create
      parameters:
      - in: body
        name: body
        description: The metric content
        required: true
        schema:
          $ref: '#/definitions/models.Metric'
      responses:
        "201":
          schema:
            $ref: '#/definitions/models.Metric'
        "403":
          description: body is empty
  /metrics/{id}:
    get:
      tags:
      - metrics
      description: find metric by id
      operationId: MetricsController.Get
      parameters:
      - in: path
        name: id
        description: the metric ID you want to get
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Metric'
        "404":
          description: :id not exists
    put:
      tags:
      - metrics
      description: update the metric
      operationId: MetricsController.Update
      parameters:
      - in: path
        name: id
        description: The metric ID you want to update
        required: true
        type: string
      - in: body
        name: body
        description: The body
        required: true
        schema:
          $ref: '#/definitions/models.Metric'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Metric'
        "404":
          description: :id not exists
    delete:
      tags:
      - metrics
      description: delete the metric
      operationId: MetricsController.Delete
      parameters:
      - in: path
        name: id
        description: The metric ID you want to delete
        required: true
        type: string
      responses:
        "204":
          description: '{string} delete success!'
        "404":
          description: :id not exists
definitions:
  .Time:
    type: object
  models.Driver:
    title: Driver
    type: object
    properties:
      id:
        type: integer
        format: int64
      license_number:
        type: string
      name:
        type: string
  models.Metric:
    title: Metric
    type: object
    properties:
      driver_id:
        type: integer
        format: int32
      id:
        type: integer
        format: int64
      lat:
        type: number
        format: float
      lon:
        type: number
        format: float
      metric_name:
        type: string
      timestamp:
        $ref: '#/definitions/time.Time'
      value:
        type: string
tags:
- name: drivers
  description: |
    Driver actions
- name: metrics
  description: |
    Metric actions
